#!/bin/bash

webServer() {
    echo "Buscando servidor web..."
    dpkg -l | grep nginx &>/dev/null
    if [ $? -eq 0 ]; then
        echo "Se ha encontrado un servidor NGINX, reiniciando"
        sudo systemctl restart nginx
        if [ $? -eq 0 ]; then
            echo "Servicio reiniciado con exito"
        else
            echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
        fi
        read -p "Presione enter para volver"
    else
        dpkg -l | grep apache2 &>/dev/null
        if [ $? -eq 0 ]; then
            echo "Se ha encontrado un servidor APACHE, reiniciando"
            sudo systemctl restart apache2
            if [ $? -eq 0 ]; then
                echo "Servicio reiniciado con exito"
            else
                echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
            fi
            read -p "Presione enter para volver"
        else
            read -p "No se ha encontrado un servidor web instalado, presione enter para volver"
        fi
    fi
    clear
}

dhcpDNS() {
        echo "Buscando servidor DHCP..."
    dpkg -l | grep isc-dhcp-server &>/dev/null
    if [ $? -eq 0 ]; then
        echo "Existe un servidor DHCP, intentando reiniciar"
        sudo systemctl restart isc-dhcp-server
        if [ $? -eq 0 ]; then
            echo "Servicio reiniciado con exito"
        else
            echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
        fi
        read -p "Presione enter para volver"
    else
        dpkg -l | grep bind9 &>/dev/null
        if [ $? -eq 0 ]; then
            echo "Existe un servidor DNS (bind9), intentando reiniciar"
            sudo systemctl restart bind9
            if [ $? -eq 0 ]; then
                echo "Servicio reiniciado con exito"
            else
                echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
            fi
            read -p "Presione enter para volver"
        else
            read -p "No se ha encontrado un servidor DHCP/DNS instalado, presione enter para volver"
        fi
    fi
    clear
}

mariaDB() {
        dpkg -l | grep mariadb-server &>/dev/null
        if [ $? -eq 0 ]; then
            echo "Existe un servidor MariaDB, intentando reiniciar"
            sudo systemctl restart mariadb-server
            if [ $? -eq 0 ]; then
                echo "Servicio reiniciado con exito"
            else
                echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
            fi
            read -p "Presione enter para volver"
        else
            read -p "No se ha encontrado un servidor MariaDB instalado, presione enter para volver"
        fi
        clear
}

haProxy() {
        dpkg -l | grep haproxy &>/dev/null
        if [ $? -eq 0 ]; then
            echo "Existe un servidor haProxy, intentando reiniciar"
            sudo systemctl restart haproxy
            if [ $? -eq 0 ]; then
                echo "Servicio reiniciado con exito"
            else
                echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
            fi
            read -p "Presione enter para volver"
        else
            read -p "No se ha encontrado un servidor haProxy instalado, presione enter para volver"
        fi
        clear
}

sshServer() {
        dpkg -l | grep openssh-server &>/dev/null
        if [ $? -eq 0 ]; then
            echo "Existe un servidor SSH, intentando reiniciar"
            sudo systemctl restart sshd
            if [ $? -eq 0 ]; then
                echo "Servicio reiniciado con exito"
            else
                echo "No se ha podido reiniciar, hagalo manualmente para revisar los errores"
            fi
            read -p "Presione enter para volver"
        else
            read -p "No se ha encontrado un servidor SSH instalado, presione enter para volver"
        fi
        clear
}

clear
menu() {
    echo "GESTION DE SERVICIOS"
    echo "1) Servidor Web"
    echo "2) Servidor DHCP y DNS"
    echo "3) MariaDB (Base de datos)"
    echo "4) HaProxy (Balanceador Carga)"
    echo "5) Servidor SSH"
    echo "6) Volver"
    read -p "Introduce el número de tu opción: " option

    case $option in
    1) selected="Servidor Web" ;;
    2) selected="Servidor DHCP y DNS" ;;
    3) selected="MariaDB (Base de datos)" ;;
    4) selected="HaProxy (Balanceador Carga)" ;;
    5) selected="Servidor SSH" ;;
    6) selected="Volver" ;;
    *)
        echo "Opción no válida"
        selected=""
        ;;
    esac
}

menu

while [ "$selected" != "Volver" ]; do
    case $selected in
    "Servidor Web") webServer ;;
    "Servidor DHCP y DNS") dhcpDNS ;;
    "MariaDB (Base de datos)") mariaDB ;;
    "HaProxy (Balanceador Carga)") haProxy ;;
    "Servidor SSH") sshServer ;;
    "Volver") break ;;
    esac
    menu
done
